meta {
  name: get_data-name
  type: http
  seq: 2
}

get {
  url: http://localhost:5000/api/v1/data?owner=bruno@test.ci&name=games
  body: none
  auth: none
}

params:query {
  owner: bruno@test.ci
  name: games
}

tests {
  test("data is correctly received", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("data received JSON data", function() {
    expect(res.getHeader("content-type")).to.equal("application/json; charset=utf-8");
  });

  test("data has correct content length", function() {
    expect(res.getHeader("content-length")).to.equal("140");
  });

  test("data has correct top-level structure", function() {
    const data = res.getBody();
    expect(data).to.be.a('array');
  });

  test("data has correct top-level values", function() {
    const data = res.getBody();
    expect(data).to.have.lengthOf(1);
  });

  test("data has correct element structure", function() {
    const data = res.getBody();
    for(const dataIndex in data.length) {
      const dataElement = data[dataIndex];
      expect(dataElement).to.have.property('name');
      expect(dataElement.name).to.be.a('string');
      expect(dataElement).to.have.property('category');
      expect(dataElement.category).to.be.a('string');
      expect(dataElement).to.have.property('items');
      expect(dataElement.items).to.be.a('array');
    }
  });

  test("data has correct element values", function() {
    const data = res.getBody();
    expect(data[0].name).to.equal("games");
    expect(data[0].category).to.equal("ðŸŽ®");
    expect(data[0].items).to.have.lengthOf(1);
  });

  test("data has correct items structure", function() {
    const data = res.getBody();
    for(const dataIndex in data.length) {
      const item = data[dataIndex].items[0];
      expect(item).to.have.property('status');
      expect(item.status).to.be.a('string');
      expect(item).to.have.property('name');
      expect(item.name).to.be.a('string');
      expect(item).to.have.property('icon');
      expect(item.icon).to.be.a('array');
      expect(item).to.have.property('price');
      expect(item.price).to.be.a('string');
      expect(item).to.have.property('currency');
      expect(item.currency).to.be.a('array');
    }
  });

  test("data has correct items values", function() {
    const data = res.getBody();
    expect(data[0].items[0].status).to.equal("OK");
    expect(data[0].items[0].name).to.equal("Prince of PersiaÂ®");
    expect(data[0].items[0].icon).to.equal("logo.jpg");
    expect(data[0].items[0].price).to.equal("7.98");
    expect(data[0].items[0].currency).to.equal("PLN");
  });
}
